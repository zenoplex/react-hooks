version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.6

parameters:
  node_version:
    type: string
    default: 20.9.0
    description: Node version to use
  playwright_version:
    type: string
    default: 1.32.1
    description: Playwright version to use

executors:
  default:
    environment:
      TZ: Asia/Tokyo
    docker:
      - image: cimg/node:<< pipeline.parameters.node_version >>
  playwright:
    docker:
      - image: mcr.microsoft.com/playwright:v<< pipeline.parameters.playwright_version >>-focal

commands:
  restore_npm_cache:
    steps:
    - restore_cache:
        keys:
        - npm-packages-{{ .Environment.CACHE_KEY }}-{{ checksum "package-lock.json" }}
        - npm-packages-{{ .Environment.CACHE_KEY }}-
  install_npm_packages:
    steps:
    - run:
        name: Install npm packages
        command: npm ci
  save_npm_cache:
    steps:
    - save_cache:
        key: npm-packages-{{ .Environment.CACHE_KEY }}-{{ checksum "package-lock.json" }}
        paths:
        - ./node_modules
  persist_my_workspace:
    steps:
    - persist_to_workspace:
        root: .
        paths:
        - .
  attach_my_workspace:
    steps:
    - attach_workspace:
        at: .
  install_awscli:
    steps:
      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
  

jobs:
  build:
    executor: default
    resource_class: medium
    steps:
      - checkout
      - restore_npm_cache
      - install_npm_packages
      - save_npm_cache
      - run:
          name: Build
          command: npm run build
      - persist_my_workspace
  lint:
    executor: default
    resource_class: medium
    steps:
      - checkout
      - attach_my_workspace
      - run:
          name: Run lint
          command: npm run lint
  spec:
    executor: default
    resource_class: medium
    steps:
      - checkout
      - attach_my_workspace
      - run:
          name: Run spec
          command: npm run test:ci
      - store_test_results:
          path: coverages
  typecheck:
    executor: default
    resource_class: small
    steps:
      - checkout
      - attach_my_workspace
      - run:
          name: Run typecheck
          command: npm run typecheck
  build_storybook:
    executor: default
    steps:
      - checkout
      - attach_my_workspace
      - run:
          name: Build storybook
          command: npm run build-storybook --quiet -w workshop
      - persist_to_workspace:
          name: Save storybook cache
          root: .
          paths:
            - apps/workshop/storybook-static
  upload_storybook:
    executor: default
    resource_class: small
    steps:
      - install_awscli
      - attach_workspace:
          at: .
      - run:
          name: Upload storybook
          command: |
            if [ "${CIRCLE_PULL_REQUEST:-undef}" == "undef" ]; then
              echo 'Skip uploading storybook'
              exit 0
            fi
            # CIRCLE_PULL_REQUEST returns "pull/n/"
            PR_NUMBER=$(echo ${CIRCLE_PULL_REQUEST} | sed -e 's/.*\///')
            # Bucket path
            S3_BUCKET_PATH="s3://${STORYBOOK_S3_BUCKET_NAME}/${PR_NUMBER}"
            aws s3 sync apps/workshop/storybook-static "${S3_BUCKET_PATH}" --delete
            aws s3 cp --cache-control 'no-cache, must-revalidate, max-age=0' \
              "apps/workshop/storybook-static/index.html" "${S3_BUCKET_PATH}/index.html"
            # Workaround for msw
            aws s3 cp "apps/workshop/storybook-static/mockServiceWorker.js" "s3://${STORYBOOK_S3_BUCKET_NAME}/mockServiceWorker.js"
            
            # report to github status
            STORYBOOK_S3_BUCKET_NAME=${STORYBOOK_S3_BUCKET_NAME} \
            PR_NUMBER=${PR_NUMBER} \
              ./.circleci/storybook_gh_status.sh
  test_storybook:
    executor: playwright
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Serve Storybook
          command: npx serve -l 6006 ./apps/workshop/storybook-static
          background: true
      - run: 
          name: Wait for serve
          command: wget --tries 600 --waitretry 1 --retry-connrefused --timeout 300 -O /dev/null http://localhost:6006
      - run:
          name: Run storybook tests
          command: npm run test:storybook -w workshop -- --maxWorkers=2 --coverage --junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: /tmp/reports/junit
      - store_test_results:
          path: /tmp/reports/junit
      - store_artifacts:
          path: apps/workshop/.nyc_output
  vrt:
    executor: default
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - browser-tools/install-chrome
      - run:
          name: Serve Storybook
          command: npx serve -l 6006 ./apps/workshop/storybook-static
          background: true
      - run:
          name: Run storycap
          command: npx storycap http://localhost:6006
      - run:
          name: Run regsuit and save output
          command: npx reg-suit run --config ./apps/workshop/regconfig.json | tee /tmp/regsuit.log
      - run:
          name: Save output url to env
          command: |
            REGSUIT_REPORT_URL=$(cat /tmp/regsuit.log | sed 's/\x1B\[[0-9;]*[a-zA-Z]//g' | grep 'Report URL: ' | sed 's/.*URL: //g')
            echo "export REGSUIT_REPORT_URL=\"${REGSUIT_REPORT_URL}\"" >> $BASH_ENV
      - run:
          name: Report to github status
          command: ./.circleci/regsuit_gh_status.sh

workflows:
  ci:
    jobs:
      - build
      - lint:
          requires:
            - build
      - typecheck:
          requires:
            - build
      - spec:
          requires:
            - build
      - build_storybook:
          requires:
            - build      
      - test_storybook:
          requires:
            - build_storybook
      - upload_storybook:
          requires:
            - build_storybook
      - vrt:
          requires:
            - build_storybook
